name: cas server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  api:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Deploy project to server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          ARGS: '--delete'
          SOURCE: ./
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: ${{ secrets.SERVER_ROOT }}/_api
          EXCLUDE: '/dist, /node_modules, /build, /docker, /packages'

      - name: run docker compose
        uses: D3rHase/ssh-command-action@main
        with:
          host: ${{ secrets.SERVER_HOST }} # Remote server address / ip - required
          user: ${{ secrets.SERVER_USER }} # Remote server user - required
          private_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }} # Private ssh key registered on the remote server - required
          # Command to be executed - Default: echo 'hello world' - optional
          command: cd ${{ secrets.SERVER_ROOT }}/_api && npm run docker-compose:prod

  cas-client-mw:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set node version to 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Enter package
        run: cd ./pacakges/cas-client-mw

      - name: Install deps
        run: npm ci

      - name: Build Package
        run: npm run build

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
